* column-enforce-mode
  Highlight text that extends beyond a certain column.

  This mode is meant to be a very lightweight, zero configuration, way to help enforce the 80 column rule. It can be configured for any N-column rule however.

What it looks like enforcing the 80 column rule:

[[http://i.imgur.com/EezaOo9.png]]
** Usage
   Start it up interactively on the current buffer,
   #+BEGIN_SRC 
   default startup:
   M-x: column-enforce-mode 

   or by specific rule function
   M-x: 80-column-rule

   or with a prefix arg specifying the column limit
   C-u 90 M-x column-enforce-n
   #+END_SRC
   or tie it to a major mode:
   #+BEGIN_SRC emacs-lisp
     (add-hook 'c-mode-hook 'column-enforce-mode)
   #+END_SRC
   tie it to all source code modes:
   #+BEGIN_SRC emacs-lisp
     (add-hook 'prog-mode-hook 'column-enforce-mode)
   #+END_SRC
** Tabs and Spaces
Column-enforce-mode begins highlighting text that extends beyond 80 columns in an Emacs buffer, not after 80 characters. This means that it may begin marking at much fewer than 80 characters.

For instance: By default tabs are drawn as 8 blank columns, this means that if a line contained 10 tabs and the word "hello", "hello" would be highlighted. (10 tabs * 8 columns per tab = 80)
** Create preconfigured N-column-rules
   #+BEGIN_SRC emacs-lisp
     (make-column-rule 110) ;; creates function `110-column-rule' for use interactively
   #+END_SRC
** Customizing the column
#+BEGIN_SRC emacs-lisp
  (setq column-enforce-column <your desired column>)
#+END_SRC

** Customizing the look
Customize `column-enforce-face' to change the look of the mode
